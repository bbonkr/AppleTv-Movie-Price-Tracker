// <auto-generated />
using System;
using AppleTv.Movie.Price.Tracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppleTv.Movie.Price.Tracker.Data.SqlServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppleTv.Movie.Price.Tracker.Entities.Movie", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArtworkUrl100")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArtworkUrl30")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArtworkUrl60")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArtworkUrlBase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CollectionArtistId")
                        .HasColumnType("int");

                    b.Property<string>("CollectionArtistViewUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollectionCensoredName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollectionExplicitness")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CollectionHdPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<string>("CollectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CollectionPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CollectionViewUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentAdvisoryRating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscCount")
                        .HasColumnType("int");

                    b.Property<int>("DiscNumber")
                        .HasColumnType("int");

                    b.Property<bool>("HasITunesExtras")
                        .HasColumnType("bit");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviewUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryGenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("ReleaseDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TrackCensoredName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrackCount")
                        .HasColumnType("int");

                    b.Property<string>("TrackExplicitness")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TrackHdPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TrackHdRentalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrackId")
                        .HasColumnType("int");

                    b.Property<string>("TrackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrackNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("TrackPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TrackRentalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrackTimeMillis")
                        .HasColumnType("int");

                    b.Property<string>("TrackViewUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WrapperType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("AppleTv.Movie.Price.Tracker.Entities.MoviePrice", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal>("CollectionHdPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CollectionPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MovieId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal>("TrackHdPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TrackHdRentalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TrackPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TrackRentalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("MoviePrices");
                });

            modelBuilder.Entity("AppleTv.Movie.Price.Tracker.Entities.MoviePrice", b =>
                {
                    b.HasOne("AppleTv.Movie.Price.Tracker.Entities.Movie", "Movie")
                        .WithMany("TrackingLogs")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("AppleTv.Movie.Price.Tracker.Entities.Movie", b =>
                {
                    b.Navigation("TrackingLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
